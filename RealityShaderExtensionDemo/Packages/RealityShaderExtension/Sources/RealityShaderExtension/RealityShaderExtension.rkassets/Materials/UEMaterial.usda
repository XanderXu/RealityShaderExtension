#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["SphereMaskMaterial", "FresnelMaterial", "CameraDepthFadeMaterial", "GeneratedBandMaterial", "GeneratedOffsetBandsMaterial", "NormalFromHeightmapMaterial", "NormalFromHeightmapChaosMaterial", "Cube", "Sphere", "Cube_1", "Cube_2", "Cube_3", "Cube_4", "Cube_5"]
    def Material "SphereMaskMaterial" (
        references = None
    )
    {
        token outputs:mtlx:surface.connect = </Root/SphereMaskMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/SphereMaskMaterial/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (33.410156, 125.859375)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 41

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/SphereMaskMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (-195.33984, 86.453125)
            int ui:nodegraph:node:stackingOrder = 43
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_float_color3"
            float inputs:in.connect = </Root/SphereMaskMaterial/SphereMask.outputs:Oneminus_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-489.5542, 122.47827)
            int ui:nodegraph:node:stackingOrder = 5
        }

        def "SphereMask" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/SphereMask>
        )
        {
            float2 ui:nodegraph:node:pos = (-736.486, 52.621155)
            int ui:nodegraph:node:stackingOrder = 791
        }
    }

    def Material "FresnelMaterial"
    {
        reorder nameChildren = ["UsdPreviewSurface", "Cube", "Sphere", "PreviewSurface", "Fresnel", "Convert"]
        token outputs:mtlx:surface.connect = </Root/FresnelMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/FresnelMaterial/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/FresnelMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (-255, 105)
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_float_color3"
            float inputs:in.connect = </Root/FresnelMaterial/Fresnel.outputs:Exp_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-458.8828, 136.22266)
            int ui:nodegraph:node:stackingOrder = 6
        }

        def "Fresnel" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/Fresnel>
        )
        {
            float2 ui:nodegraph:node:pos = (-687.99097, 100.69348)
            int ui:nodegraph:node:stackingOrder = 712
        }
    }

    def Material "GeneratedBandMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "Convert", "GeneratedBand"]
        token outputs:mtlx:surface.connect = </Root/GeneratedBandMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/GeneratedBandMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (93.5, 100.5)
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_float_color3"
            float inputs:in.connect = </Root/GeneratedBandMaterial/GeneratedBand.outputs:SphereMask_Oneminus_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-104.53516, 145.57812)
            int ui:nodegraph:node:stackingOrder = 4
        }

        def "GeneratedBand" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/GeneratedBand>
        )
        {
            float inputs:Compare
            bool inputs:Direction_Switch = 0
            float inputs:Offset
            float inputs:Sharpness
            float inputs:Width
            float2 ui:nodegraph:node:pos = (-436.76257, 46.12561)
            int ui:nodegraph:node:stackingOrder = 1003
        }
    }

    def Cube "Cube_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/GeneratedBandMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/SphereMaskMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.6, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/FresnelMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.3, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "Cube_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/GeneratedOffsetBandsMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        float2 ui:nodegraph:node:pos = (-67.74805, 91.16016)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.3, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "CameraDepthFadeMaterial"
    {
        token outputs:mtlx:surface.connect = </Root/CameraDepthFadeMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/CameraDepthFadeMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (93.5, 100.5)
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_float_color3"
            float inputs:in.connect = </Root/CameraDepthFadeMaterial/CameraDepthFade.outputs:Out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-86.32422, 79.69922)
            int ui:nodegraph:node:stackingOrder = 5
        }

        def "CameraDepthFade" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/CameraDepthFade>
        )
        {
            float2 ui:nodegraph:node:pos = (-308.0338, 35.443848)
            int ui:nodegraph:node:stackingOrder = 8
        }
    }

    def Material "GeneratedOffsetBandsMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "Convert", "GeneratedOffsetBands"]
        token outputs:mtlx:surface.connect = </Root/GeneratedOffsetBandsMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/GeneratedOffsetBandsMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (93.5, 100.5)
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_float_color3"
            float inputs:in.connect = </Root/GeneratedOffsetBandsMaterial/GeneratedOffsetBands.outputs:SphereMask_Oneminus_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-153.44531, 86.88672)
            int ui:nodegraph:node:stackingOrder = 3
        }

        def "GeneratedOffsetBands" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/GeneratedOffsetBands>
        )
        {
            float inputs:Bonds
            float inputs:Compare
            bool inputs:Direction_Switch = 0
            float inputs:Offset
            float inputs:Sharpness
            float inputs:Width
            float2 ui:nodegraph:node:pos = (-463.08173, 17.763577)
            int ui:nodegraph:node:stackingOrder = 981
        }
    }

    def Cube "Cube_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/NormalFromHeightmapMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        float2 ui:nodegraph:node:pos = (216.5, 104.5)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.6, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Cube "Cube_4" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/NormalFromHeightmapChaosMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        float2 ui:nodegraph:node:pos = (236.5, 124.5)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.9, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "NormalFromHeightmapMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "NormalFromHeightmap", "Convert"]
        token outputs:mtlx:surface.connect = </Root/NormalFromHeightmapMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/NormalFromHeightmapMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (93.5, 100.5)
        }

        def "NormalFromHeightmap" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/NormalFromHeightmap>
        )
        {
            asset inputs:HeightMap
            float4 inputs:HeightMapChannelSelector
            float inputs:HeightMapUVOffset
            float inputs:NormalMapIntensity
            float2 ui:nodegraph:node:pos = (-389.16022, 52.171867)
            int ui:nodegraph:node:stackingOrder = 1074
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_vector3_color3"
            float3 inputs:in.connect = </Root/NormalFromHeightmapMaterial/NormalFromHeightmap.outputs:Normal>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-117.97266, 126.11719)
            int ui:nodegraph:node:stackingOrder = 1063
        }
    }

    def Cube "Cube_5" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/CameraDepthFadeMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        float2 ui:nodegraph:node:pos = (256.5, 144.5)
        int ui:nodegraph:node:stackingOrder = 3
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (1.2, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Material "NormalFromHeightmapChaosMaterial"
    {
        reorder nameChildren = ["PreviewSurface", "NormalFromHeightmap", "Convert"]
        token outputs:mtlx:surface.connect = </Root/NormalFromHeightmapChaosMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:node:pos = (-55.95511, 84.83594)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.25, 100.5)

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/NormalFromHeightmapChaosMaterial/Convert.outputs:out>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (93.5, 100.5)
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_vector3_color3"
            float3 inputs:in.connect = </Root/NormalFromHeightmapChaosMaterial/NormalFromHeightmapChaos_1.outputs:Normal>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-117.97266, 126.11719)
            int ui:nodegraph:node:stackingOrder = 1063
        }

        def "NormalFromHeightmapChaos_1" (
            active = true
            instanceable = true
            references = @Nodes/UENode.usda@</Root/NormalFromHeightmapChaos>
        )
        {
            float2 ui:nodegraph:node:pos = (-428.77545, -16.023438)
            int ui:nodegraph:node:stackingOrder = 1076
        }
    }
}

