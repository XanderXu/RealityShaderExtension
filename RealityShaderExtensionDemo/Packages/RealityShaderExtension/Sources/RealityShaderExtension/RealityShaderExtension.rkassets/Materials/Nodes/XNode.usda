#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def NodeGraph "RandomNoise"
    {
        float2 inputs:builtinVector = (17.13, 3.71) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (85.29031, 96.55139)
                    int stackingOrderInSubgraph = 3076
                }
            }
        )
        float2 inputs:seed (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (81.946106, -22.648193)
                    int stackingOrderInSubgraph = 3067
                }
            }
        )
        float2 inputs:seed.connect = None
        float outputs:Fractional_out.connect = </Root/RandomNoise/Fractional.outputs:out>
        float2 ui:nodegraph:node:pos = (61.123848, 372.55737)
        int ui:nodegraph:node:stackingOrder = 3963
        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1075, 57.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 3075

        def Shader "DotProduct"
        {
            uniform token info:id = "ND_dotproduct_vector2"
            float2 inputs:in1.connect = </Root/RandomNoise.inputs:seed>
            float2 inputs:in2.connect = </Root/RandomNoise.inputs:builtinVector>
            float outputs:out
            float2 ui:nodegraph:node:pos = (306.25, 57.5)
            int ui:nodegraph:node:stackingOrder = 3052
        }

        def Shader "Fractional"
        {
            uniform token info:id = "ND_realitykit_fractional_float"
            float inputs:in.connect = </Root/RandomNoise/Multiply_10.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (841, 57.5)
            int ui:nodegraph:node:stackingOrder = 3052
        }

        def Shader "Multiply_10"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RandomNoise/Sin.outputs:out>
            float inputs:in2 = 43758.547
            float outputs:out
            float2 ui:nodegraph:node:pos = (639.24243, 110.03497)
            int ui:nodegraph:node:stackingOrder = 3063
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/RandomNoise/DotProduct.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (507.25, 57.5)
            int ui:nodegraph:node:stackingOrder = 3052
        }
    }

    def NodeGraph "LineNoise" (
        references = None
    )
    {
        reorder nameChildren = ["Floor_3", "Multiply_10", "Floor_2", "Multiply_1", "Multiply_8", "Power_3", "TextureCoordinates", "Multiply", "RandomNoise_1"]
        float inputs:BlockLayer_Instensity (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (62.484375, 355.21875)
                    int stackingOrderInSubgraph = 4528
                }
            }
        )
        float inputs:BlockLayer_Instensity.connect = None
        float2 inputs:BlockLayer_UV (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (80.75, 142.5)
                    int stackingOrderInSubgraph = 4527
                }
            }
        )
        float2 inputs:BlockLayer_UV.connect = None
        float inputs:Time (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (80.75, 257.5)
                    int stackingOrderInSubgraph = 4528
                }
            }
        )
        float inputs:Time.connect = None
        float outputs:Power_3_out.connect = </Root/LineNoise/Power_3.outputs:out>
        float2 ui:nodegraph:node:pos = (-533.36005, -31.153511)
        int ui:nodegraph:node:stackingOrder = 4564
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1133.5, 143.375)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 4537

        def Shader "Floor_3"
        {
            uniform token info:id = "ND_floor_float"
            float inputs:in.connect = </Root/LineNoise/Multiply_10.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (355.41406, 199.02734)
            int ui:nodegraph:node:stackingOrder = 4527
        }

        def Shader "Multiply_10"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/LineNoise.inputs:Time>
            float inputs:in2 = 30
            float outputs:out
            float2 ui:nodegraph:node:pos = (249.5, 257.5)
            int ui:nodegraph:node:stackingOrder = 4524
        }

        def Shader "Floor_2"
        {
            uniform token info:id = "ND_floor_vector2"
            float2 inputs:in.connect = </Root/LineNoise/Multiply_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (403.75, 57.5)
            int ui:nodegraph:node:stackingOrder = 4524
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/LineNoise/TextureCoordinates.outputs:out>
            float2 inputs:in2.connect = </Root/LineNoise.inputs:BlockLayer_UV>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (249.5, 57.5)
            int ui:nodegraph:node:stackingOrder = 4524
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/LineNoise/Floor_2.outputs:out>
            float inputs:in2.connect = </Root/LineNoise/Floor_3.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (489.59766, 124.69141)
            int ui:nodegraph:node:stackingOrder = 4529
        }

        def Shader "Power_3"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/LineNoise/RandomNoise_1.outputs:Fractional_out>
            float inputs:in2.connect = </Root/LineNoise.inputs:BlockLayer_Instensity>
            float outputs:out
            float2 ui:nodegraph:node:pos = (933.25, 143.375)
            int ui:nodegraph:node:stackingOrder = 4524
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (69.48828, 22.605469)
            int ui:nodegraph:node:stackingOrder = 4525
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/LineNoise/Multiply_8.outputs:out>
            float inputs:in2 = 0.01
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (568.46094, 164.22656)
            int ui:nodegraph:node:stackingOrder = 4534
        }

        def "RandomNoise_1" (
            active = true
            instanceable = true
            references = </Root/RandomNoise>
        )
        {
            float2 inputs:builtinVector
            float2 inputs:seed.connect = </Root/LineNoise/Multiply.outputs:out>
            float2 ui:nodegraph:node:pos = (730.97186, 92.84855)
            int ui:nodegraph:node:stackingOrder = 4536
        }
    }

    def NodeGraph "Trunc1"
    {
        float inputs:numLevels = 4 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (84.18359, 64.39453)
                    int stackingOrderInSubgraph = 1987
                }
            }
        )
        float inputs:x (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (82.74609, -1.2695312)
                    int stackingOrderInSubgraph = 2015
                }
            }
        )
        float inputs:x.connect = None
        float outputs:trunc (
            customData = {
                dictionary realitykit = {
                    int stackingOrderInSubgraph = 1989
                }
            }
        )
        float outputs:trunc.connect = </Root/Trunc1/Divide.outputs:out>
        float2 ui:nodegraph:node:pos = (-200.38419, 224.73486)
        int ui:nodegraph:node:stackingOrder = 5957
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (689.34375, 34.67578)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1987

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/Trunc1/Floor.outputs:out>
            float inputs:in2.connect = </Root/Trunc1.inputs:numLevels>
            float outputs:out
            float2 ui:nodegraph:node:pos = (562.75, 33)
            int ui:nodegraph:node:stackingOrder = 1985
        }

        def Shader "Floor"
        {
            uniform token info:id = "ND_floor_float"
            float inputs:in.connect = </Root/Trunc1/Multiply_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (413.16016, 16.386719)
            int ui:nodegraph:node:stackingOrder = 2013
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/Trunc1.inputs:x>
            float inputs:in2 = 4
            float inputs:in2.connect = </Root/Trunc1.inputs:numLevels>
            float outputs:out
            float2 ui:nodegraph:node:pos = (266.41016, 16.386719)
            int ui:nodegraph:node:stackingOrder = 2013
        }
    }

    def NodeGraph "Trunc2"
    {
        float2 inputs:numLevels = (8, 8) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (79.75391, 34.222656)
                    int stackingOrderInSubgraph = 2034
                }
            }
        )
        float2 inputs:x = (0, 0) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (85.66797, -40.589844)
                    int stackingOrderInSubgraph = 2039
                }
            }
        )
        float2 inputs:x.connect = None
        float2 outputs:trunc.connect = </Root/Trunc2/Divide.outputs:out>
        float2 ui:nodegraph:node:pos = (-170.635, -147.65657)
        int ui:nodegraph:node:stackingOrder = 5957
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (689.34375, 34.67578)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1994

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/Trunc2.inputs:x>
            float2 inputs:in2.connect = </Root/Trunc2.inputs:numLevels>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (280.3164, -36.753906)
            int ui:nodegraph:node:stackingOrder = 2033
        }

        def Shader "Floor"
        {
            uniform token info:id = "ND_floor_vector2"
            float2 inputs:in.connect = </Root/Trunc2/Multiply_2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (427.0664, -36.753906)
            int ui:nodegraph:node:stackingOrder = 2033
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_vector2"
            float2 inputs:in1.connect = </Root/Trunc2/Floor.outputs:out>
            float2 inputs:in2.connect = </Root/Trunc2.inputs:numLevels>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (562.75, 33)
            int ui:nodegraph:node:stackingOrder = 1986
        }
    }
}

